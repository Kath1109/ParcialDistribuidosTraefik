services:
  traefik:
    image: traefik:v3.0
    container_name: traefik_proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - poke_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pikachu.rule=Host(`pikachu.localhost`)"
      - "traefik.http.routers.charizard.rule=Host(`charizard.localhost`)"
      - "traefik.http.routers.charizard.middlewares=auth-charizard"
      - "traefik.http.middlewares.auth-charizard.basicauth.users=admin:$2y$05$/8oCMlVpJ0fgMGcmxLYJbegtcGRGH0I5/ZzustqxgPTUga0cAtm82"
      - "traefik.http.routers.bulbasur.rule=Host(`bulbasur.localhost`)"

  api_comercial:
    image: nginx:alpine
    deploy:
      replicas: 2
    networks:
      - poke_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.comercial.rule=Host(`pikachu.localhost`)"
      - "traefik.http.services.comercial.loadbalancer.server.port=80"
      - "traefik.http.routers.comercial.middlewares=rate-limit"
      - "traefik.http.middlewares.rate-limit.ratelimit.average=1"
      - "traefik.http.middlewares.rate-limit.ratelimit.burst=2"

  api_legendaria:
    image: nginx:alpine
    networks:
      - poke_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.legendario.rule=Host(`pikachu.localhost`) && Path(`/legendario`)"
      - "traefik.http.services.legendario.loadbalancer.server.port=80"

networks:
  poke_net:
    driver: bridge
